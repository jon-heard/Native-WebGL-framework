#include "DrawCache_Glow.h"
#define GLEW_STATIC
#include <GL/glew.h>
#include <GL/gl.h>
#include <GLFW/glfw3.h>
#include "Platform.h"
#include "Shader.h"

#include <iostream>

using namespace std;
using namespace platform;

unsigned int DrawCache_Glow::instanceCount = 0;
Shader* DrawCache_Glow::blurShader = NULL;

DrawCache_Glow::DrawCache_Glow()
{
	if(instanceCount == 0)
	{
		DrawCache_Glow::blurShader = new Shader("media/frag_blur.txt");
	}
	instanceCount++;
}
DrawCache_Glow::~DrawCache_Glow()
{
	instanceCount--;
	if(instanceCount == 0)
	{
		delete DrawCache_Glow::blurShader;
		DrawCache_Glow::blurShader = NULL;
	}
}

void DrawCache_Glow::flush()
{
	Shader::useShader("media/frag_blur.txt");
	Shader::setParameter_float("blurAmount", 0.005f);
	setNextDraw_useCustomShader(true);
	drawImage(0, 0, RIGHT-LEFT, BOTTOM-TOP, textureId);
}
