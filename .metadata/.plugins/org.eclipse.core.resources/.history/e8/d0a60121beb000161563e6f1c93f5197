
#include "DrawCache.h"
#include <gl/gl.h>

namespace platform
{
	void drawCache_init()
	{

	}

	void drawCache_shutdown()
	{

	}

	DrawCache::DrawCache()
	{
		//		glGenTextures(1, &drawCacheBuffer1_texture);
		//		glBindTexture(GL_TEXTURE_2D, drawCacheBuffer1_texture);
		//		glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA8, WIN_WIDTH, WIN_HEIGHT, 0, GL_RGBA, GL_INT, 0);
		//		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);
		//		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);
		//		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
		//		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);
		//		glBindTexture(GL_TEXTURE_2D, 0);
		//
		//		glGenFramebuffers(1, &drawCacheBuffer1_frameBuffer);
		//		glBindFramebuffer(GL_FRAMEBUFFER, drawCacheBuffer1_frameBuffer);
		//		glFramebufferTexture(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, drawCacheBuffer1_texture, 0);
		//		glBindFramebuffer(GL_FRAMEBUFFER, 0);

		//		if(glCheckFramebufferStatus(GL_FRAMEBUFFER) != GL_FRAMEBUFFER_COMPLETE)
		//			return;
	}

	DrawCache::~DrawCache() {}

	void DrawCache::startCache()
	{
		glBindFramebuffer(GL_FRAMEBUFFER, drawCacheBuffer1_frameBuffer);
		glViewport(0, 0, WIN_WIDTH, WIN_HEIGHT);
		glClearColor(0, 0, 0, 0);
		glClear(GL_COLOR_BUFFER_BIT);
	}

	void DrawCache::flushCache()
	{
		glBindFramebuffer(GL_FRAMEBUFFER,0);
		drawImage(LEFT, TOP, RIGHT-LEFT, BOTTOM-TOP, drawCacheBuffer1_texture);
	}

	void DrawCache::flushDrawCacheWithBlur()
	{
		glBindFramebuffer(GL_FRAMEBUFFER,0);

		shaders_useBlur(LEFT, TOP, RIGHT-LEFT, BOTTOM-TOP, drawCacheBuffer1_texture, .003f);

		glBindBuffer(GL_ARRAY_BUFFER, rectangleBuffer);

		glVertexAttribPointer(
				attribute_position, 2, GL_FLOAT, GL_FALSE, 8, BUFFER_OFFSET(0));
		glEnableVertexAttribArray(attribute_position);

		glDrawArrays(GL_TRIANGLES, 0, 12);

		glBindBuffer(GL_ARRAY_BUFFER, 0);
	}
}
